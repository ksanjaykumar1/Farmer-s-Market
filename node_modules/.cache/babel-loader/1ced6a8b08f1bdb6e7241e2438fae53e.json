{"ast":null,"code":"import _classCallCheck from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/zero/famers-market/farmers-market/src/components/DisplayCropOverview.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\n\nvar DisplayCropOverview =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DisplayCropOverview, _Component);\n\n  function DisplayCropOverview(props) {\n    var _this;\n\n    _classCallCheck(this, DisplayCropOverview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DisplayCropOverview).call(this, props));\n    _this.cropcolor = {\n      0: \"green\",\n      1: \"yellow\"\n    };\n    _this.cropstate = [\"Harvested\", \"Processed\"];\n    _this.salecolor = {\n      0: \"orange\",\n      1: \"blue\",\n      2: \"red\"\n    };\n    _this.salestate = [\"Crowdsourcing\", \"ForSale\", \"Sold\"]; // this.state={\n    //   cropid:0\n    // }\n\n    return _this;\n  }\n\n  _createClass(DisplayCropOverview, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.props.crops.map(function (crop, key) {\n        return React.createElement(\"div\", {\n          className: \"product\",\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"product_organic\",\n          style: {\n            background: _this2.cropcolor[crop.cropstate]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \" \", _this2.cropstate[crop.cropstate]), React.createElement(\"div\", {\n          className: \"product_organic\",\n          style: {\n            background: _this2.salecolor[crop.salestate]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \" \", _this2.salestate[crop.salestate]), React.createElement(\"ul\", {\n          id: \"postList\",\n          className: \"list-group list-group-flush\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"UPC :   \", React.createElement(\"input\", {\n          value: crop.upc.toNumber(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"NAME: \", React.createElement(\"input\", {\n          value: crop.cropName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), \" \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Price: \", React.createElement(\"input\", {\n          value: window.web3.utils.fromWei(crop.price.toString(), 'Ether'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), \"Eth \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"KG:   \", React.createElement(\"input\", {\n          value: crop.kg.toNumber(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Farm Owner:\", React.createElement(\"input\", {\n          value: crop.farmOwner,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), \" \"), crop.productState == 0 ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Enter Crop ID to Join \", React.createElement(\"input\", {\n          id: \"cropid\",\n          type: \"number\",\n          placeholder: \"Enter the cropid\",\n          required: true,\n          on: true,\n          onChange: function onChange(event) {\n            event.preventDefault();\n            _this2.state.cropid = event.target.value;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: function onClick(event) {\n            event.preventDefault();\n            var unionid = union.uNumber.toNumber();\n\n            _this2.props.joinunion(event, _this2.state.cropid, unionid);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \" Join Union \"), \" \") : React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \" \"))));\n      }));\n    }\n  }]);\n\n  return DisplayCropOverview;\n}(Component);\n\nexport default DisplayCropOverview;","map":{"version":3,"sources":["/home/zero/famers-market/farmers-market/src/components/DisplayCropOverview.js"],"names":["React","Component","DisplayCropOverview","props","cropcolor","cropstate","salecolor","salestate","crops","map","crop","key","background","upc","toNumber","cropName","window","web3","utils","fromWei","price","toString","kg","farmOwner","productState","event","preventDefault","state","cropid","target","value","unionid","union","uNumber","joinunion"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\n\nclass DisplayCropOverview extends Component {\n\n\n  constructor(props){\n    super(props)\n    this.cropcolor ={\n      0:\"green\",\n      1:\"yellow\",\n  \n  }\n  this.cropstate=[\n    \n    \"Harvested\",  \n\"Processed\",  \n  ]\n  this.salecolor={\n\n    0:\"orange\",\n    1:\"blue\",\n    2:\"red\"\n  }\n  this.salestate=[\n\n    \"Crowdsourcing\",\n    \"ForSale\",\n    \"Sold\",\n  ]\n  // this.state={\n  //   cropid:0\n  // }\n  \n\n    }\n\n    render(){\n\n        return(\n            \n            <div >\n              \n              { this.props.crops.map((crop, key) => {\n                    \n                return(\n                  <div className=\"product\" key={key} >\n                    <div className=\"product_organic\"style={{background:this.cropcolor[crop.cropstate]}} > {this.cropstate[crop.cropstate]}</div>\n                    <div className=\"product_organic\"style={{background:this.salecolor[crop.salestate]}} > {this.salestate[crop.salestate]}</div>\n                    <ul id=\"postList\" className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item\">\n                      <p>UPC :   <input  value={crop.upc.toNumber()}/></p> \n                      <p>NAME: <input value={crop.cropName} /> </p>\n                      <p>Price: <input value={window.web3.utils.fromWei(crop.price.toString(), 'Ether')} />Eth </p>\n                      <p>KG:   <input value={crop.kg.toNumber()} /></p>\n                      <p>Farm Owner:<input value={crop.farmOwner}/> </p>\n                        {/* <p>ABOUT:   {product.productdescription}</p> */}\n                        {crop.productState==0 ? <p>Enter Crop ID to Join <input\n                            id=\"cropid\"\n                            type=\"number\"\n                            \n                            placeholder=\"Enter the cropid\"\n                            required on \n                            onChange={(event)=>{\n                              event.preventDefault()\n                               this.state.cropid=event.target.value;\n                            }} /> \n\n                      \n                      <button \n                              onClick={(event)=>{\n                                \n                                event.preventDefault()\n\n                                let unionid=union.uNumber.toNumber()\n                                this.props.joinunion(event,this.state.cropid,unionid)\n                              }}\n                      \n                            > Join Union </button> </p> :\n                             <button> </button>}\n                        \n                      </li>\n                    </ul>\n                    </div>\n                    \n                )   \n              }\n              )\n            }\n\n              \n            </div>\n\n\n        )\n    }\n}\n\nexport default DisplayCropOverview;"]},"metadata":{},"sourceType":"module"}