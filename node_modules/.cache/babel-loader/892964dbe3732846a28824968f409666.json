{"ast":null,"code":"import _toConsumableArray from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/zero/famers-market/farmers-market/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Identicon from 'identicon';\nimport SupplyChain from \"../abis/SupplyChain.json\";\nimport Web3 from 'web3';\nimport \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport Product from \"./Product\";\nimport Crops from \"./Crop\";\nimport Union from \"./Union\";\nimport DisplayProductOverview from \"./DisplayProductsOverview\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkSupplyChain, supplyChain, upc, cropc, productc, unionc, i, crop, union, product;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                networkSupplyChain = SupplyChain.networks[networkId];\n\n                if (!networkSupplyChain) {\n                  _context3.next = 59;\n                  break;\n                }\n\n                supplyChain = new web3.eth.Contract(SupplyChain.abi, networkSupplyChain.address);\n                this.setState({\n                  supplyChain: supplyChain\n                });\n                _context3.next = 15;\n                return supplyChain.methods.upc().call();\n\n              case 15:\n                upc = _context3.sent;\n                this.setState({\n                  upc: upc\n                });\n                _context3.next = 19;\n                return supplyChain.methods.cropc().call();\n\n              case 19:\n                cropc = _context3.sent;\n                this.setState({\n                  cropc: cropc\n                });\n                _context3.next = 23;\n                return supplyChain.methods.productc().call();\n\n              case 23:\n                productc = _context3.sent;\n                this.setState({\n                  productc: productc\n                });\n                _context3.next = 27;\n                return supplyChain.methods.unionc().call();\n\n              case 27:\n                unionc = _context3.sent;\n                this.setState({\n                  unionc: unionc\n                }); //to store crops\n\n                i = 1;\n\n              case 30:\n                if (!(i <= cropc)) {\n                  _context3.next = 39;\n                  break;\n                }\n\n                _context3.next = 33;\n                return supplyChain.methods.crops(i).call();\n\n              case 33:\n                crop = _context3.sent;\n                this.setState({\n                  crops: [].concat(_toConsumableArray(this.state.crops), [crop])\n                });\n                console.log({\n                  crops: this.state.crops\n                });\n\n              case 36:\n                i++;\n                _context3.next = 30;\n                break;\n\n              case 39:\n                i = 1;\n\n              case 40:\n                if (!(i <= unionc)) {\n                  _context3.next = 49;\n                  break;\n                }\n\n                _context3.next = 43;\n                return supplyChain.methods.unions(i).call();\n\n              case 43:\n                union = _context3.sent;\n                this.setState({\n                  unions: [].concat(_toConsumableArray(this.state.unions), [union])\n                });\n                console.log({\n                  unions: this.state.unions\n                });\n\n              case 46:\n                i++;\n                _context3.next = 40;\n                break;\n\n              case 49:\n                i = 1;\n\n              case 50:\n                if (!(i <= productc)) {\n                  _context3.next = 59;\n                  break;\n                }\n\n                _context3.next = 53;\n                return supplyChain.methods.products(i).call();\n\n              case 53:\n                product = _context3.sent;\n                this.setState({\n                  products: [].concat(_toConsumableArray(this.state.products), [product])\n                });\n                console.log({\n                  products: this.state.products\n                });\n\n              case 56:\n                i++;\n                _context3.next = 50;\n                break;\n\n              case 59:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.RegisterFarmerHandler = function () {\n      _this.state.supplyChain.methods.addFarmer().send({\n        from: _this.state.account\n      });\n    };\n\n    _this.RegisterDistributorHandler = function () {\n      _this.state.supplyChain.methods.addDistributor().send({\n        from: _this.state.account\n      });\n    };\n\n    _this.RegisterConsumerHandler = function () {\n      _this.state.supplyChain.methods.addConsumer().send({\n        from: _this.state.account\n      });\n    };\n\n    _this.RegisterRetailerHandler = function () {\n      _this.state.supplyChain.methods.addRetailer().send({\n        from: _this.state.account\n      });\n    };\n\n    _this.onpostCrop = function (event, cropname, kg, location, price) {\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.harvestCrop(cropname, kg, location, price).send({\n        from: _this.state.account\n      });\n    };\n\n    _this.onpostUnion = function (event, cropname, kg, location, price) {\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.Registerunion(cropname, kg, location).send({\n        from: _this.state.account\n      });\n    };\n\n    _this.onpostProduct = function (event, productname, price) {\n      // this.setState({ loading: true })\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.registerProduct(productname, price).send({\n        from: _this.state.account\n      });\n    };\n\n    _this.onpostProductCrop = function (event, productname, price, cropid) {\n      // this.setState({ loading: true })\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.registerProductCrop(productname, price, cropid).send({\n        from: _this.state.account\n      });\n    };\n\n    _this.onpostProductUnion = function (event, productname, price, unionid) {\n      // this.setState({ loading: true })\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.registerProductUnion(productname, price, unionid).send({\n        from: _this.state.account\n      });\n    };\n\n    _this.state = {\n      web3: null,\n      account: null,\n      contract: null,\n      supplyChain: null,\n      crops: [],\n      products: [],\n      unions: [],\n      upc: 0,\n      cropc: 0,\n      productc: 0,\n      unionc: 0\n    };\n    return _this;\n  } // componentDidMount = async () => {\n  //   try {\n  //     // Get network provider and web3 instance.\n  //     const web3 = await getWeb3();\n  //     // Use web3 to get the user's accounts.\n  //     const accounts = await web3.eth.getAccounts();\n  //     // Get the contract instance.\n  //     const networkId = await web3.eth.net.getId();\n  //     const deployedNetwork = SimpleStorageContract.networks[networkId];\n  //     const instance = new web3.eth.Contract(\n  //       SimpleStorageContract.abi,\n  //       deployedNetwork && deployedNetwork.address,\n  //     );\n  //     // Set web3, accounts, and contract to the state, and then proceed with an\n  //     // example of interacting with the contract's methods.\n  //     this.setState({ web3, accounts, contract: instance }, this.runExample);\n  //   } catch (error) {\n  //     // Catch any errors for any of the above operations.\n  //     alert(\n  //       `Failed to load web3, accounts, or contract. Check console for details.`,\n  //     );\n  //     console.error(error);\n  //   }\n  // };\n  // runExample = async () => {\n  //   const { accounts, contract } = this.state;\n  //   // Stores a given value, 5 by default.\n  //   // await contract.methods.set(5).send({ from: accounts[0] });\n  //   // // Get the value from the contract to prove it worked.\n  //   // const response = await contract.methods.get().call();\n  //   // // Update state with the result.\n  //   // this.setState({ storageValue: response });\n  // };\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      // if (!this.state.web3) {\n      //   return <div>Loading Web3, accounts, and contract...</div>;\n      // }\n      return React.createElement(\"div\", {\n        background: \"wh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.RegisterFarmerHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Register has Farmer\"), React.createElement(\"button\", {\n        onClick: this.RegisterDistributorHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Register has Distributor\"), React.createElement(\"button\", {\n        onClick: this.RegisterRetailerHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Register has Retailer\"), React.createElement(\"button\", {\n        onClick: this.RegisterConsumerHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Register has Consumer\"), React.createElement(Product, {\n        products: this.state.products,\n        postProduct: this.onpostProduct,\n        postProductCrop: this.onpostProductCrop,\n        postProductUnion: this.onpostProductUnion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(Crops, {\n        postCrop: this.onpostCrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(Union, {\n        postUnion: this.onpostUnion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(DisplayProductOverview, {\n        products: this.state.products,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/zero/famers-market/farmers-market/src/components/App.js"],"names":["React","Component","Identicon","SupplyChain","Web3","Navbar","Product","Crops","Union","DisplayProductOverview","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","setState","account","net","getId","networkId","networkSupplyChain","networks","supplyChain","Contract","abi","address","methods","upc","call","cropc","productc","unionc","i","crops","crop","state","unions","union","products","product","props","RegisterFarmerHandler","addFarmer","send","from","RegisterDistributorHandler","addDistributor","RegisterConsumerHandler","addConsumer","RegisterRetailerHandler","addRetailer","onpostCrop","event","cropname","kg","location","price","preventDefault","harvestCrop","onpostUnion","Registerunion","onpostProduct","productname","registerProduct","onpostProductCrop","cropid","registerProductCrop","onpostProductUnion","unionid","registerProductUnion","contract"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Identicon from 'identicon';\nimport SupplyChain from \"../abis/SupplyChain.json\";\nimport Web3 from 'web3';\nimport \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport Product from \"./Product\";\nimport Crops from \"./Crop\";\nimport Union from \"./Union\";\nimport DisplayProductOverview from \"./DisplayProductsOverview\";\n\n\nclass App extends Component {\n \n  async  componentWillMount(){\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    \n    \n  }\n  \n\n  async loadWeb3() {\n    \n    \n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n  async loadBlockchainData(){\n    \n     const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    console.log(accounts)\n    this.setState({account:accounts[0]})\n    const networkId =await web3.eth.net.getId()\n    const networkSupplyChain= SupplyChain.networks[networkId]\n    if (networkSupplyChain)\n    {\n      let supplyChain = new  web3.eth.Contract(SupplyChain.abi,networkSupplyChain.address)\n      this.setState({supplyChain:supplyChain})\n\n      const upc=await supplyChain.methods.upc().call()\n      this.setState({upc})\n\n      const cropc=await supplyChain.methods.cropc().call()\n      this.setState({cropc})\n\n      const productc=await supplyChain.methods.productc().call()\n      this.setState({productc})\n\n      const unionc=await supplyChain.methods.unionc().call()\n      this.setState({unionc})\n\n      //to store crops\n      for (var i = 1; i <= cropc; i++) {\n        const crop = await supplyChain.methods.crops(i).call()\n  \n        this.setState({\n          crops: [...this.state.crops, crop]\n        })\n        console.log({crops:this.state.crops})\n\n      }\n\n      // to store unions\n      for ( i = 1; i <= unionc; i++) {\n        const union = await supplyChain.methods.unions(i).call()\n  \n        this.setState({\n          unions: [...this.state.unions, union]\n        })\n        console.log({unions:this.state.unions})\n      }\n      \n      //to store products\n      for ( i = 1; i <= productc; i++) {\n        const product = await supplyChain.methods.products(i).call()\n  \n        this.setState({\n          products: [...this.state.products,product]\n        })\n        console.log({products:this.state.products})\n      }\n    }\n\n    \n      \n\n\n    \n\n  }\n\n  RegisterFarmerHandler=()=>{\n\n    this.state.supplyChain.methods.addFarmer().send({ from: this.state.account })\n\n  }\n\n  RegisterDistributorHandler=()=>{\n\n    this.state.supplyChain.methods.addDistributor().send({ from: this.state.account })\n\n  }\n  RegisterConsumerHandler=()=>{\n\n    this.state.supplyChain.methods.addConsumer().send({ from: this.state.account })\n\n  }\n  RegisterRetailerHandler=()=>{\n\n    this.state.supplyChain.methods.addRetailer().send({ from: this.state.account }) \n\n  }\n\n\n  onpostCrop =(event,cropname,kg,location ,price)=>{\n    event.preventDefault()\n    this.state.supplyChain.methods.harvestCrop(cropname,kg,location ,price\n      ).send({ from: this.state.account })\n  }\n\n  onpostUnion =(event,cropname,kg,location ,price)=>{\n    event.preventDefault()\n    this.state.supplyChain.methods.Registerunion(cropname,kg,location\n      ).send({ from: this.state.account })\n  }\n\n  onpostProduct=(event,productname,\n    price) =>{\n    // this.setState({ loading: true })\n    event.preventDefault()\n    this.state.supplyChain.methods.registerProduct(\n      productname,\n    price\n      \n      ).send({ from: this.state.account })\n    \n  }\n\n  onpostProductCrop=(event,productname,\n    price, cropid) =>{\n    // this.setState({ loading: true })\n    event.preventDefault()\n    this.state.supplyChain.methods.registerProductCrop(\n      productname,\n    price,\n    cropid\n      \n      ).send({ from: this.state.account })\n    \n  }\n  onpostProductUnion=(event,productname,\n    price,unionid) =>{\n    // this.setState({ loading: true })\n    event.preventDefault()\n    this.state.supplyChain.methods.registerProductUnion(\n      productname,\n    price,\n    unionid\n      \n      ).send({ from: this.state.account })\n    \n  }\n\n  constructor(props){\n\n     super(props)\n    this. state = { \n     web3: null, \n     account: null, \n     contract: null,\n     supplyChain:null,\n     crops:[],\n     products:[],\n     unions:[],\n     upc:0,\n     cropc:0,\n     productc:0,\n     unionc:0\n    \n    }\n\n\n  }\n\n\n  // componentDidMount = async () => {\n  //   try {\n  //     // Get network provider and web3 instance.\n  //     const web3 = await getWeb3();\n\n  //     // Use web3 to get the user's accounts.\n  //     const accounts = await web3.eth.getAccounts();\n\n  //     // Get the contract instance.\n  //     const networkId = await web3.eth.net.getId();\n  //     const deployedNetwork = SimpleStorageContract.networks[networkId];\n  //     const instance = new web3.eth.Contract(\n  //       SimpleStorageContract.abi,\n  //       deployedNetwork && deployedNetwork.address,\n  //     );\n\n  //     // Set web3, accounts, and contract to the state, and then proceed with an\n  //     // example of interacting with the contract's methods.\n  //     this.setState({ web3, accounts, contract: instance }, this.runExample);\n  //   } catch (error) {\n  //     // Catch any errors for any of the above operations.\n  //     alert(\n  //       `Failed to load web3, accounts, or contract. Check console for details.`,\n  //     );\n  //     console.error(error);\n  //   }\n  // };\n\n  // runExample = async () => {\n  //   const { accounts, contract } = this.state;\n\n  //   // Stores a given value, 5 by default.\n  //   // await contract.methods.set(5).send({ from: accounts[0] });\n\n  //   // // Get the value from the contract to prove it worked.\n  //   // const response = await contract.methods.get().call();\n\n  //   // // Update state with the result.\n  //   // this.setState({ storageValue: response });\n  // };\n\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n    return (\n      <div background=\"wh\" >\n        <Navbar account= {this.state.account}/>\n        {/* <h1>Good to Go!</h1> */}\n        <button onClick={this.RegisterFarmerHandler} >Register has Farmer</button>\n        <button onClick={this.RegisterDistributorHandler} >Register has Distributor</button>\n        <button onClick={this.RegisterRetailerHandler} >Register has Retailer</button>\n        <button onClick={this.RegisterConsumerHandler} >Register has Consumer</button>\n\n        <Product \n        products={this.state.products}\n        postProduct={this.onpostProduct}\n        postProductCrop ={this.onpostProductCrop}\n        postProductUnion={this.onpostProductUnion}\n        />\n\n        <Crops\n          postCrop={this.onpostCrop}\n        />\n\n        <Union postUnion={this.onpostUnion} \n        />\n\n        <DisplayProductOverview \n          products={this.state.products}\n        />\n\n\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}