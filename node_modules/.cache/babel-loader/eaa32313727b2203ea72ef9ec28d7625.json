{"ast":null,"code":"import _toConsumableArray from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/zero/famers-market/farmers-market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/zero/famers-market/farmers-market/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Identicon from 'identicon';\nimport SupplyChain from \"../abis/SupplyChain.json\";\nimport Web3 from 'web3';\nimport \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport Product from \"./Product\";\nimport Crops from \"./Crop\";\nimport Union from \"./Union\";\nimport DisplayProductOverview from \"./DisplayProductsOverview\";\nimport DisplayCropOverview from \"./DisplayCropOverview\";\nimport DisplayUnionOverview from \"./DisplayUnionOverview\";\nimport UnionClose from \"./UnionClose\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkSupplyChain, supplyChain, upc, cropc, productc, unionc, i, crop, x, unionb, unionstate, union, product;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                networkSupplyChain = SupplyChain.networks[networkId];\n\n                if (!networkSupplyChain) {\n                  _context3.next = 63;\n                  break;\n                }\n\n                supplyChain = new web3.eth.Contract(SupplyChain.abi, networkSupplyChain.address);\n                this.setState({\n                  supplyChain: supplyChain\n                });\n                _context3.next = 15;\n                return supplyChain.methods.upc().call();\n\n              case 15:\n                upc = _context3.sent;\n                this.setState({\n                  upc: upc\n                });\n                _context3.next = 19;\n                return supplyChain.methods.cropc().call();\n\n              case 19:\n                cropc = _context3.sent;\n                this.setState({\n                  cropc: cropc\n                });\n                _context3.next = 23;\n                return supplyChain.methods.productc().call();\n\n              case 23:\n                productc = _context3.sent;\n                this.setState({\n                  productc: productc\n                });\n                _context3.next = 27;\n                return supplyChain.methods.unionc().call();\n\n              case 27:\n                unionc = _context3.sent;\n                this.setState({\n                  unionc: unionc\n                }); //to store crops\n\n                i = 1;\n\n              case 30:\n                if (!(i <= cropc)) {\n                  _context3.next = 38;\n                  break;\n                }\n\n                _context3.next = 33;\n                return supplyChain.methods.crops(i).call();\n\n              case 33:\n                crop = _context3.sent;\n                this.setState({\n                  crops: [].concat(_toConsumableArray(this.state.crops), [crop])\n                }); // console.log({crops:this.state.crops})\n\n              case 35:\n                i++;\n                _context3.next = 30;\n                break;\n\n              case 38:\n                console.log(this.state.crops);\n                x = this.state.crops[1];\n                console.log(x.location); // to store unions\n\n                i = 1;\n\n              case 42:\n                if (!(i <= unionc)) {\n                  _context3.next = 54;\n                  break;\n                }\n\n                _context3.next = 45;\n                return supplyChain.methods.unions(i).call();\n\n              case 45:\n                unionb = _context3.sent;\n                _context3.next = 48;\n                return supplyChain.methods.unionstate(i).call();\n\n              case 48:\n                unionstate = _context3.sent;\n                union = {\n                  union: unionb,\n                  unionstate: unionstate\n                };\n                this.setState({\n                  unions: [].concat(_toConsumableArray(this.state.unions), [union])\n                }); // console.log({unions:this.state.unions})\n\n              case 51:\n                i++;\n                _context3.next = 42;\n                break;\n\n              case 54:\n                i = 1;\n\n              case 55:\n                if (!(i <= productc)) {\n                  _context3.next = 63;\n                  break;\n                }\n\n                _context3.next = 58;\n                return supplyChain.methods.products(i).call();\n\n              case 58:\n                product = _context3.sent;\n                this.setState({\n                  products: [].concat(_toConsumableArray(this.state.products), [product])\n                }); // console.log({products:this.state.products})\n\n              case 60:\n                i++;\n                _context3.next = 55;\n                break;\n\n              case 63:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.RegisterFarmerHandler = function () {\n      _this.state.supplyChain.methods.addFarmer().send({\n        from: _this.state.account\n      });\n    };\n\n    _this.RegisterDistributorHandler = function () {\n      _this.state.supplyChain.methods.addDistributor().send({\n        from: _this.state.account\n      });\n    };\n\n    _this.RegisterConsumerHandler = function () {\n      _this.state.supplyChain.methods.addConsumer().send({\n        from: _this.state.account\n      });\n    };\n\n    _this.RegisterRetailerHandler = function () {\n      _this.state.supplyChain.methods.addRetailer().send({\n        from: _this.state.account\n      });\n    };\n\n    _this.onpostCrop = function (event, cropname, kg, location, price) {\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.harvestCrop(cropname, kg, location, price).send({\n        from: _this.state.account\n      });\n    };\n\n    _this.onpostUnion = function (event, cropname, kg, location, priceperkg, cropstate, paymentstate) {\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.Registerunion(cropname, kg, location, priceperkg, cropstate, paymentstate).send({\n        from: _this.state.account\n      });\n    };\n\n    _this.onpostProduct = function (event, productname, price, id, description, bstate) {\n      // this.setState({ loading: true })\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.registerProduct(productname, price, id, description, bstate).send({\n        from: _this.state.account\n      });\n    };\n\n    _this.onUnionClose = function (event, upc, price) {\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.closeunion(upc, price).send({\n        from: _this.state.account\n      });\n    };\n\n    _this.onjoinunion = function (event, cropid, unionid) {\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.joinunion(cropid, unionid).send({\n        from: _this.state.account\n      });\n    };\n\n    _this.oncropPurchase = function (event, cropNumber, price) {\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.cropPurchase(cropNumber).send({\n        from: _this.state.account,\n        value: price\n      });\n    };\n\n    _this.onproductPurchase = function (event, cropNumber, price) {\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.productPurchase(cropNumber).send({\n        from: _this.state.account,\n        value: price\n      });\n    };\n\n    _this.onunionCroppurchase = function (event, uNumber, price) {\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.unionCroppurchase(uNumber).send({\n        from: _this.state.account,\n        value: price\n      });\n    };\n\n    _this.onsendunionmoney = function (event, uNumber, price) {\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.sendunionmoney(uNumber).send({\n        from: _this.state.account,\n        value: price\n      });\n    };\n\n    _this.oncalculatepayment = function (event, uNumber) {\n      event.preventDefault();\n\n      _this.state.supplyChain.methods.calculatepayment(uNumber).send({\n        from: _this.state.account\n      });\n    };\n\n    _this.ondisplaycrop = function (event, cropid) {\n      event.preventDefault(); // const crop = await supplyChain.methods.crops(cropid).call()\n\n      var dcorp = _this.state.crops[cropid];\n      console.log(dcorp);\n    };\n\n    _this.onproductprevious = function (event, bstate, previousNumber) {\n      event.preventDefault();\n\n      if (bstate == 1) {\n        var dcorp = _this.state.crops[previousNumber];\n        console.log(dcorp);\n      } else {\n        var dunion = _this.state.unions[previousNumber];\n        console.log(dunion);\n      }\n    };\n\n    _this.state = {\n      web3: null,\n      account: null,\n      contract: null,\n      supplyChain: null,\n      crops: [],\n      products: [],\n      unions: [],\n      upc: 0,\n      cropc: 0,\n      productc: 0,\n      unionc: 0\n    };\n    return _this;\n  } // componentDidMount = async () => {\n  //   try {\n  //     // Get network provider and web3 instance.\n  //     const web3 = await getWeb3();\n  //     // Use web3 to get the user's accounts.\n  //     const accounts = await web3.eth.getAccounts();\n  //     // Get the contract instance.\n  //     const networkId = await web3.eth.net.getId();\n  //     const deployedNetwork = SimpleStorageContract.networks[networkId];\n  //     const instance = new web3.eth.Contract(\n  //       SimpleStorageContract.abi,\n  //       deployedNetwork && deployedNetwork.address,\n  //     );\n  //     // Set web3, accounts, and contract to the state, and then proceed with an\n  //     // example of interacting with the contract's methods.\n  //     this.setState({ web3, accounts, contract: instance }, this.runExample);\n  //   } catch (error) {\n  //     // Catch any errors for any of the above operations.\n  //     alert(\n  //       `Failed to load web3, accounts, or contract. Check console for details.`,\n  //     );\n  //     console.error(error);\n  //   }\n  // };\n  // runExample = async () => {\n  //   const { accounts, contract } = this.state;\n  //   // Stores a given value, 5 by default.\n  //   // await contract.methods.set(5).send({ from: accounts[0] });\n  //   // // Get the value from the contract to prove it worked.\n  //   // const response = await contract.methods.get().call();\n  //   // // Update state with the result.\n  //   // this.setState({ storageValue: response });\n  // };\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      // if (!this.state.web3) {\n      //   return <div>Loading Web3, accounts, and contract...</div>;\n      // }\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(Crops, {\n        postCrop: this.onpostCrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(Union, {\n        postUnion: this.onpostUnion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), React.createElement(UnionClose, {\n        Unionclose: this.onUnionClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), React.createElement(Product, {\n        products: this.state.products,\n        postProduct: this.onpostProduct,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), React.createElement(DisplayCropOverview, {\n        crops: this.state.crops,\n        cropPurchase: this.oncropPurchase,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }), React.createElement(DisplayUnionOverview, {\n        unions: this.state.unions,\n        joinunion: this.onjoinunion,\n        unionCroppurchase: this.onunionCroppurchase,\n        sendunionmoney: this.onsendunionmoney,\n        calculatepayment: this.oncalculatepayment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), React.createElement(DisplayProductOverview, {\n        products: this.state.products,\n        productPurchase: this.onproductPurchase,\n        productprevious: this.onproductprevious,\n        crops: this.state.crops,\n        unions: this.state.unions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/zero/famers-market/farmers-market/src/components/App.js"],"names":["React","Component","Identicon","SupplyChain","Web3","Navbar","Product","Crops","Union","DisplayProductOverview","DisplayCropOverview","DisplayUnionOverview","UnionClose","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","setState","account","net","getId","networkId","networkSupplyChain","networks","supplyChain","Contract","abi","address","methods","upc","call","cropc","productc","unionc","i","crops","crop","state","x","location","unions","unionb","unionstate","union","products","product","props","RegisterFarmerHandler","addFarmer","send","from","RegisterDistributorHandler","addDistributor","RegisterConsumerHandler","addConsumer","RegisterRetailerHandler","addRetailer","onpostCrop","event","cropname","kg","price","preventDefault","harvestCrop","onpostUnion","priceperkg","cropstate","paymentstate","Registerunion","onpostProduct","productname","id","description","bstate","registerProduct","onUnionClose","closeunion","onjoinunion","cropid","unionid","joinunion","oncropPurchase","cropNumber","cropPurchase","value","onproductPurchase","productPurchase","onunionCroppurchase","uNumber","unionCroppurchase","onsendunionmoney","sendunionmoney","oncalculatepayment","calculatepayment","ondisplaycrop","dcorp","onproductprevious","previousNumber","dunion","contract"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAGMC,G;;;;;;;;;;;;;;;;uBAGI,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;qBASFC,MAAM,CAACC,Q;;;;;AACTD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAId,IAAJ,CAASY,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AAEH,oBAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAId,IAAJ,CAASY,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,iBAFI,MAGA;AACHJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,qEAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIMH,gBAAAA,I,GAAOF,MAAM,CAACE,I,EACrB;;;uBACuBA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,qBAAKG,QAAL,CAAc;AAACC,kBAAAA,OAAO,EAACJ,QAAQ,CAAC,CAAD;AAAjB,iBAAd;;uBACuBN,IAAI,CAACI,GAAL,CAASO,GAAT,CAAaC,KAAb,E;;;AAAjBC,gBAAAA,S;AACAC,gBAAAA,kB,GAAoB7B,WAAW,CAAC8B,QAAZ,CAAqBF,SAArB,C;;qBACtBC,kB;;;;;AAEEE,gBAAAA,W,GAAc,IAAKhB,IAAI,CAACI,GAAL,CAASa,QAAd,CAAuBhC,WAAW,CAACiC,GAAnC,EAAuCJ,kBAAkB,CAACK,OAA1D,C;AAClB,qBAAKV,QAAL,CAAc;AAACO,kBAAAA,WAAW,EAACA;AAAb,iBAAd;;uBAEgBA,WAAW,CAACI,OAAZ,CAAoBC,GAApB,GAA0BC,IAA1B,E;;;AAAVD,gBAAAA,G;AACN,qBAAKZ,QAAL,CAAc;AAACY,kBAAAA,GAAG,EAAHA;AAAD,iBAAd;;uBAEkBL,WAAW,CAACI,OAAZ,CAAoBG,KAApB,GAA4BD,IAA5B,E;;;AAAZC,gBAAAA,K;AACN,qBAAKd,QAAL,CAAc;AAACc,kBAAAA,KAAK,EAALA;AAAD,iBAAd;;uBAEqBP,WAAW,CAACI,OAAZ,CAAoBI,QAApB,GAA+BF,IAA/B,E;;;AAAfE,gBAAAA,Q;AACN,qBAAKf,QAAL,CAAc;AAACe,kBAAAA,QAAQ,EAARA;AAAD,iBAAd;;uBAEmBR,WAAW,CAACI,OAAZ,CAAoBK,MAApB,GAA6BH,IAA7B,E;;;AAAbG,gBAAAA,M;AACN,qBAAKhB,QAAL,CAAc;AAACgB,kBAAAA,MAAM,EAANA;AAAD,iBAAd,E,CAEA;;AACSC,gBAAAA,C,GAAI,C;;;sBAAGA,CAAC,IAAIH,K;;;;;;uBACAP,WAAW,CAACI,OAAZ,CAAoBO,KAApB,CAA0BD,CAA1B,EAA6BJ,IAA7B,E;;;AAAbM,gBAAAA,I;AAEN,qBAAKnB,QAAL,CAAc;AACZkB,kBAAAA,KAAK,+BAAM,KAAKE,KAAL,CAAWF,KAAjB,IAAwBC,IAAxB;AADO,iBAAd,E,CAGA;;;AAN0BF,gBAAAA,CAAC,E;;;;;AAS7BnB,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKqB,KAAL,CAAWF,KAAvB;AACKG,gBAAAA,C,GAAE,KAAKD,KAAL,CAAWF,KAAX,CAAiB,CAAjB,C;AACPpB,gBAAAA,OAAO,CAAEC,GAAT,CAAasB,CAAC,CAACC,QAAf,E,CAEA;;AACML,gBAAAA,CAAC,GAAG,C;;;sBAAGA,CAAC,IAAID,M;;;;;;uBACKT,WAAW,CAACI,OAAZ,CAAoBY,MAApB,CAA2BN,CAA3B,EAA8BJ,IAA9B,E;;;AAAfW,gBAAAA,M;;uBAEmBjB,WAAW,CAACI,OAAZ,CAAoBc,UAApB,CAA+BR,CAA/B,EAAkCJ,IAAlC,E;;;AAAnBY,gBAAAA,U;AACFC,gBAAAA,K,GAAO;AACTA,kBAAAA,KAAK,EAACF,MADG;AACIC,kBAAAA,UAAU,EAACA;AADf,iB;AAGX,qBAAKzB,QAAL,CAAc;AACZuB,kBAAAA,MAAM,+BAAM,KAAKH,KAAL,CAAWG,MAAjB,IAAyBG,KAAzB;AADM,iBAAd,E,CAGA;;;AAVwBT,gBAAAA,CAAC,E;;;;;AAcrBA,gBAAAA,CAAC,GAAG,C;;;sBAAGA,CAAC,IAAIF,Q;;;;;;uBACMR,WAAW,CAACI,OAAZ,CAAoBgB,QAApB,CAA6BV,CAA7B,EAAgCJ,IAAhC,E;;;AAAhBe,gBAAAA,O;AAEN,qBAAK5B,QAAL,CAAc;AACZ2B,kBAAAA,QAAQ,+BAAM,KAAKP,KAAL,CAAWO,QAAjB,IAA0BC,OAA1B;AADI,iBAAd,E,CAGA;;;AAN0BX,gBAAAA,CAAC,E;;;;;;;;;;;;;;;;;;;;AAqJjC,eAAYY,KAAZ,EAAkB;AAAA;;AAAA;;AAEf,6EAAMA,KAAN;;AAFe,UAnIlBC,qBAmIkB,GAnII,YAAI;AAExB,YAAKV,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+BoB,SAA/B,GAA2CC,IAA3C,CAAgD;AAAEC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWnB;AAAnB,OAAhD;AAED,KA+HiB;;AAAA,UA7HlBiC,0BA6HkB,GA7HS,YAAI;AAE7B,YAAKd,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+BwB,cAA/B,GAAgDH,IAAhD,CAAqD;AAAEC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWnB;AAAnB,OAArD;AAED,KAyHiB;;AAAA,UAxHlBmC,uBAwHkB,GAxHM,YAAI;AAE1B,YAAKhB,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+B0B,WAA/B,GAA6CL,IAA7C,CAAkD;AAAEC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWnB;AAAnB,OAAlD;AAED,KAoHiB;;AAAA,UAnHlBqC,uBAmHkB,GAnHM,YAAI;AAE1B,YAAKlB,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+B4B,WAA/B,GAA6CP,IAA7C,CAAkD;AAAEC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWnB;AAAnB,OAAlD;AAED,KA+GiB;;AAAA,UA5GlBuC,UA4GkB,GA5GN,UAACC,KAAD,EAAOC,QAAP,EAAgBC,EAAhB,EAAmBrB,QAAnB,EAA6BsB,KAA7B,EAAqC;AAC/CH,MAAAA,KAAK,CAACI,cAAN;;AACA,YAAKzB,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+BmC,WAA/B,CAA2CJ,QAA3C,EAAoDC,EAApD,EAAuDrB,QAAvD,EAAiEsB,KAAjE,EACIZ,IADJ,CACS;AAAEC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWnB;AAAnB,OADT;AAED,KAwGiB;;AAAA,UAtGlB8C,WAsGkB,GAtGL,UAACN,KAAD,EAAOC,QAAP,EAAgBC,EAAhB,EAAmBrB,QAAnB,EAA6B0B,UAA7B,EAAwCC,SAAxC,EAAkDC,YAAlD,EAAiE;AAC5ET,MAAAA,KAAK,CAACI,cAAN;;AACA,YAAKzB,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+BwC,aAA/B,CAA6CT,QAA7C,EAAsDC,EAAtD,EAAyDrB,QAAzD,EAAkE0B,UAAlE,EAA6EC,SAA7E,EAAuFC,YAAvF,EACIlB,IADJ,CACS;AAAEC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWnB;AAAnB,OADT;AAED,KAkGiB;;AAAA,UAtElBmD,aAsEkB,GAtEJ,UAACX,KAAD,EAAOY,WAAP,EACZT,KADY,EACNU,EADM,EAEZC,WAFY,EAEAC,MAFA,EAEU;AACtB;AACAf,MAAAA,KAAK,CAACI,cAAN;;AACA,YAAKzB,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+B8C,eAA/B,CACEJ,WADF,EAEAT,KAFA,EAGAU,EAHA,EAIAC,WAJA,EAIaC,MAJb,EAMIxB,IANJ,CAMS;AAAEC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWnB;AAAnB,OANT;AAQD,KAyDiB;;AAAA,UAvDlByD,YAuDkB,GAvDL,UAACjB,KAAD,EAAO7B,GAAP,EAAWgC,KAAX,EAAmB;AAC9BH,MAAAA,KAAK,CAACI,cAAN;;AACA,YAAKzB,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+BgD,UAA/B,CAA0C/C,GAA1C,EAA8CgC,KAA9C,EAAqDZ,IAArD,CAA0D;AAAEC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWnB;AAAnB,OAA1D;AACD,KAoDiB;;AAAA,UAlDlB2D,WAkDkB,GAlDN,UAACnB,KAAD,EAAOoB,MAAP,EAAcC,OAAd,EAAwB;AAClCrB,MAAAA,KAAK,CAACI,cAAN;;AACA,YAAKzB,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+BoD,SAA/B,CAAyCF,MAAzC,EAAgDC,OAAhD,EAAyD9B,IAAzD,CAA8D;AAAEC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWnB;AAAnB,OAA9D;AACD,KA+CiB;;AAAA,UA7ClB+D,cA6CkB,GA7CH,UAACvB,KAAD,EAAOwB,UAAP,EAAkBrB,KAAlB,EAA0B;AACvCH,MAAAA,KAAK,CAACI,cAAN;;AACA,YAAKzB,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+BuD,YAA/B,CAA4CD,UAA5C,EAAwDjC,IAAxD,CAA6D;AAAEC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWnB,OAAnB;AAA2BkE,QAAAA,KAAK,EAACvB;AAAjC,OAA7D;AACD,KA0CiB;;AAAA,UAxClBwB,iBAwCkB,GAxCA,UAAC3B,KAAD,EAAOwB,UAAP,EAAkBrB,KAAlB,EAA0B;AAC1CH,MAAAA,KAAK,CAACI,cAAN;;AACA,YAAKzB,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+B0D,eAA/B,CAA+CJ,UAA/C,EAA2DjC,IAA3D,CAAgE;AAAEC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWnB,OAAnB;AAA2BkE,QAAAA,KAAK,EAACvB;AAAjC,OAAhE;AACD,KAqCiB;;AAAA,UAnClB0B,mBAmCkB,GAnCE,UAAC7B,KAAD,EAAO8B,OAAP,EAAe3B,KAAf,EAAuB;AACzCH,MAAAA,KAAK,CAACI,cAAN;;AACA,YAAKzB,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+B6D,iBAA/B,CAAiDD,OAAjD,EAA0DvC,IAA1D,CAA+D;AAAEC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWnB,OAAnB;AAA2BkE,QAAAA,KAAK,EAACvB;AAAjC,OAA/D;AACD,KAgCiB;;AAAA,UA/BlB6B,gBA+BkB,GA/BD,UAAChC,KAAD,EAAO8B,OAAP,EAAe3B,KAAf,EAAuB;AACtCH,MAAAA,KAAK,CAACI,cAAN;;AACA,YAAKzB,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+B+D,cAA/B,CAA8CH,OAA9C,EAAuDvC,IAAvD,CAA4D;AAACC,QAAAA,IAAI,EAAC,MAAKb,KAAL,CAAWnB,OAAjB;AAAyBkE,QAAAA,KAAK,EAACvB;AAA/B,OAA5D;AACD,KA4BiB;;AAAA,UA3BlB+B,kBA2BkB,GA3BC,UAAClC,KAAD,EAAO8B,OAAP,EAAiB;AAClC9B,MAAAA,KAAK,CAACI,cAAN;;AACA,YAAKzB,KAAL,CAAWb,WAAX,CAAuBI,OAAvB,CAA+BiE,gBAA/B,CAAgDL,OAAhD,EAAyDvC,IAAzD,CAA8D;AAACC,QAAAA,IAAI,EAAC,MAAKb,KAAL,CAAWnB;AAAjB,OAA9D;AACD,KAwBiB;;AAAA,UAvBjB4E,aAuBiB,GAvBF,UAACpC,KAAD,EAAOoB,MAAP,EAAgB;AAC9BpB,MAAAA,KAAK,CAACI,cAAN,GAD8B,CAE9B;;AACA,UAAMiC,KAAK,GAAG,MAAK1D,KAAL,CAAWF,KAAX,CAAiB2C,MAAjB,CAAd;AACA/D,MAAAA,OAAO,CAACC,GAAR,CAAY+E,KAAZ;AACD,KAkBiB;;AAAA,UAjBjBC,iBAiBiB,GAjBE,UAACtC,KAAD,EAAOe,MAAP,EAAcwB,cAAd,EAA+B;AACjDvC,MAAAA,KAAK,CAACI,cAAN;;AAEA,UAAIW,MAAM,IAAE,CAAZ,EACA;AACA,YAAMsB,KAAK,GAAG,MAAK1D,KAAL,CAAWF,KAAX,CAAiB8D,cAAjB,CAAd;AACAlF,QAAAA,OAAO,CAACC,GAAR,CAAY+E,KAAZ;AAEC,OALD,MAOA;AACG,YAAMG,MAAM,GAAE,MAAK7D,KAAL,CAAWG,MAAX,CAAkByD,cAAlB,CAAd;AACHlF,QAAAA,OAAO,CAACC,GAAR,CAAYkF,MAAZ;AACC;AAEF,KAEiB;;AAGhB,UAAM7D,KAAN,GAAc;AACb7B,MAAAA,IAAI,EAAE,IADO;AAEbU,MAAAA,OAAO,EAAE,IAFI;AAGbiF,MAAAA,QAAQ,EAAE,IAHG;AAIb3E,MAAAA,WAAW,EAAC,IAJC;AAKbW,MAAAA,KAAK,EAAC,EALO;AAMbS,MAAAA,QAAQ,EAAC,EANI;AAObJ,MAAAA,MAAM,EAAC,EAPM;AAQbX,MAAAA,GAAG,EAAC,CARS;AASbE,MAAAA,KAAK,EAAC,CATO;AAUbC,MAAAA,QAAQ,EAAC,CAVI;AAWbC,MAAAA,MAAM,EAAC;AAXM,KAAd;AAHgB;AAmBjB,G,CAGD;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;6BAES;AACP;AACA;AACA;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAG,KAAKI,KAAL,CAAWnB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE,oBAAC,KAAD;AACE,QAAA,QAAQ,EAAE,KAAKuC,UADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAcE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKO,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAkBE,oBAAC,UAAD;AACE,QAAA,UAAU,EAAE,KAAKW,YADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,EAuBE,oBAAC,OAAD;AACA,QAAA,QAAQ,EAAE,KAAKtC,KAAL,CAAWO,QADrB;AAEA,QAAA,WAAW,EAAE,KAAKyB,aAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBF,EA8BE,oBAAC,mBAAD;AACC,QAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWF,KADnB;AAEC,QAAA,YAAY,EAAE,KAAK8C,cAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BF,EAmCE,oBAAC,oBAAD;AACE,QAAA,MAAM,EAAE,KAAK5C,KAAL,CAAWG,MADrB;AAEE,QAAA,SAAS,EAAE,KAAKqC,WAFlB;AAGE,QAAA,iBAAiB,EAAE,KAAKU,mBAH1B;AAIE,QAAA,cAAc,EAAE,KAAKG,gBAJvB;AAKE,QAAA,gBAAgB,EAAE,KAAKE,kBALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnCF,EA0CE,oBAAC,sBAAD;AACE,QAAA,QAAQ,EAAE,KAAKvD,KAAL,CAAWO,QADvB;AAEE,QAAA,eAAe,EAAE,KAAKyC,iBAFxB;AAGE,QAAA,eAAe,EAAE,KAAKW,iBAHxB;AAIE,QAAA,KAAK,EAAE,KAAK3D,KAAL,CAAWF,KAJpB;AAKE,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAWG,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1CF,CADF;AAyDD;;;;EAhWejD,S;;AAmWlB,eAAeY,GAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Identicon from 'identicon';\nimport SupplyChain from \"../abis/SupplyChain.json\";\nimport Web3 from 'web3';\nimport \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport Product from \"./Product\";\nimport Crops from \"./Crop\";\nimport Union from \"./Union\";\nimport DisplayProductOverview from \"./DisplayProductsOverview\";\nimport DisplayCropOverview from \"./DisplayCropOverview\";\nimport DisplayUnionOverview from \"./DisplayUnionOverview\";\nimport UnionClose from \"./UnionClose\";\n\n\nclass App extends Component {\n \n  async  componentWillMount(){\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    \n    \n  }\n  \n\n  async loadWeb3() {\n    \n    \n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n  async loadBlockchainData(){\n    \n     const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    console.log(accounts)\n    this.setState({account:accounts[0]})\n    const networkId =await web3.eth.net.getId()\n    const networkSupplyChain= SupplyChain.networks[networkId]\n    if (networkSupplyChain)\n    {\n      let supplyChain = new  web3.eth.Contract(SupplyChain.abi,networkSupplyChain.address)\n      this.setState({supplyChain:supplyChain})\n\n      const upc=await supplyChain.methods.upc().call()\n      this.setState({upc})\n\n      const cropc=await supplyChain.methods.cropc().call()\n      this.setState({cropc})\n\n      const productc=await supplyChain.methods.productc().call()\n      this.setState({productc})\n\n      const unionc=await supplyChain.methods.unionc().call()\n      this.setState({unionc})\n\n      //to store crops\n      for (var i = 1; i <= cropc; i++) {\n        const crop = await supplyChain.methods.crops(i).call()\n  \n        this.setState({\n          crops: [...this.state.crops, crop]\n        })\n        // console.log({crops:this.state.crops})\n\n      }\n      console.log(this.state.crops)\n      let  x=this.state.crops[1]\n      console .log(x.location)\n\n      // to store unions\n      for ( i = 1; i <= unionc; i++) {\n        const unionb = await supplyChain.methods.unions(i).call()\n       // const members = await supplyChain.methods.members(i).call()\n        const unionstate = await supplyChain.methods.unionstate(i).call()\n        let union ={\n          union:unionb,unionstate:unionstate\n        }\n        this.setState({\n          unions: [...this.state.unions, union]\n        })\n        // console.log({unions:this.state.unions})\n      }\n      \n      //to store products\n      for ( i = 1; i <= productc; i++) {\n        const product = await supplyChain.methods.products(i).call()\n  \n        this.setState({\n          products: [...this.state.products,product]\n        })\n        // console.log({products:this.state.products})\n      }\n    }\n\n    \n      \n\n\n    \n\n  }\n\n  RegisterFarmerHandler=()=>{\n\n    this.state.supplyChain.methods.addFarmer().send({ from: this.state.account })\n\n  }\n\n  RegisterDistributorHandler=()=>{\n\n    this.state.supplyChain.methods.addDistributor().send({ from: this.state.account })\n\n  }\n  RegisterConsumerHandler=()=>{\n\n    this.state.supplyChain.methods.addConsumer().send({ from: this.state.account })\n\n  }\n  RegisterRetailerHandler=()=>{\n\n    this.state.supplyChain.methods.addRetailer().send({ from: this.state.account }) \n\n  }\n\n\n  onpostCrop =(event,cropname,kg,location ,price)=>{\n    event.preventDefault()\n    this.state.supplyChain.methods.harvestCrop(cropname,kg,location ,price\n      ).send({ from: this.state.account })\n  }\n\n  onpostUnion =(event,cropname,kg,location ,priceperkg,cropstate,paymentstate)=>{\n    event.preventDefault()\n    this.state.supplyChain.methods.Registerunion(cropname,kg,location,priceperkg,cropstate,paymentstate\n      ).send({ from: this.state.account })\n  }\n\n  // onpostProduct=(event,productname,\n  //   price,description) =>{\n  //   // this.setState({ loading: true })\n  //   event.preventDefault()\n  //   this.state.supplyChain.methods.registerProduct(\n  //     productname,\n  //   price,\n  //   description\n      \n  //     ).send({ from: this.state.account })\n    \n  // }\n\n  // onpostProductCrop=(event,productname,\n  //   price, cropid,description) =>{\n  //   // this.setState({ loading: true })\n  //   event.preventDefault()\n  //   this.state.supplyChain.methods.registerProductCrop(\n  //     productname,\n  //   price,\n  //   cropid,\n  //   description\n      \n  //     ).send({ from: this.state.account })\n    \n  // }\n  onpostProduct=(event,productname,\n    price,id,\n    description,bstate) =>{\n    // this.setState({ loading: true })\n    event.preventDefault()\n    this.state.supplyChain.methods.registerProduct(\n      productname,\n    price,\n    id,\n    description, bstate\n      \n      ).send({ from: this.state.account })\n    \n  }\n\n  onUnionClose=(event,upc,price)=>{\n    event.preventDefault()\n    this.state.supplyChain.methods.closeunion(upc,price).send({ from: this.state.account })\n  }\n\n  onjoinunion=(event,cropid,unionid)=>{\n    event.preventDefault()\n    this.state.supplyChain.methods.joinunion(cropid,unionid).send({ from: this.state.account })\n  }\n\n  oncropPurchase=(event,cropNumber,price)=>{\n    event.preventDefault()\n    this.state.supplyChain.methods.cropPurchase(cropNumber).send({ from: this.state.account,value:price })\n  }\n\n  onproductPurchase=(event,cropNumber,price)=>{\n    event.preventDefault()\n    this.state.supplyChain.methods.productPurchase(cropNumber).send({ from: this.state.account,value:price })\n  }\n\n  onunionCroppurchase=(event,uNumber,price)=>{\n    event.preventDefault()\n    this.state.supplyChain.methods.unionCroppurchase(uNumber).send({ from: this.state.account,value:price })\n  }\n  onsendunionmoney=(event,uNumber,price)=>{\n    event.preventDefault()\n    this.state.supplyChain.methods.sendunionmoney(uNumber).send({from:this.state.account,value:price})\n  }\n  oncalculatepayment=(event,uNumber)=>{\n    event.preventDefault()\n    this.state.supplyChain.methods.calculatepayment(uNumber).send({from:this.state.account})\n  }\n   ondisplaycrop =(event,cropid)=>{\n    event.preventDefault()\n    // const crop = await supplyChain.methods.crops(cropid).call()\n    const dcorp = this.state.crops[cropid]\n    console.log(dcorp);\n  }\n   onproductprevious =(event,bstate,previousNumber)=>{\n    event.preventDefault()\n   \n    if (bstate==1)\n    {\n    const dcorp = this.state.crops[previousNumber];\n    console.log(dcorp);\n\n    }\n    else\n    {\n       const dunion =this.state.unions[previousNumber];\n    console.log(dunion)\n    }\n\n  }\n\n  constructor(props){\n\n     super(props)\n    this. state = { \n     web3: null, \n     account: null, \n     contract: null,\n     supplyChain:null,\n     crops:[],\n     products:[],\n     unions:[],\n     upc:0,\n     cropc:0,\n     productc:0,\n     unionc:0\n    \n    }\n\n\n  }\n\n\n  // componentDidMount = async () => {\n  //   try {\n  //     // Get network provider and web3 instance.\n  //     const web3 = await getWeb3();\n\n  //     // Use web3 to get the user's accounts.\n  //     const accounts = await web3.eth.getAccounts();\n\n  //     // Get the contract instance.\n  //     const networkId = await web3.eth.net.getId();\n  //     const deployedNetwork = SimpleStorageContract.networks[networkId];\n  //     const instance = new web3.eth.Contract(\n  //       SimpleStorageContract.abi,\n  //       deployedNetwork && deployedNetwork.address,\n  //     );\n\n  //     // Set web3, accounts, and contract to the state, and then proceed with an\n  //     // example of interacting with the contract's methods.\n  //     this.setState({ web3, accounts, contract: instance }, this.runExample);\n  //   } catch (error) {\n  //     // Catch any errors for any of the above operations.\n  //     alert(\n  //       `Failed to load web3, accounts, or contract. Check console for details.`,\n  //     );\n  //     console.error(error);\n  //   }\n  // };\n\n  // runExample = async () => {\n  //   const { accounts, contract } = this.state;\n\n  //   // Stores a given value, 5 by default.\n  //   // await contract.methods.set(5).send({ from: accounts[0] });\n\n  //   // // Get the value from the contract to prove it worked.\n  //   // const response = await contract.methods.get().call();\n\n  //   // // Update state with the result.\n  //   // this.setState({ storageValue: response });\n  // };\n\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n    return (\n      <div  >\n        <Navbar account= {this.state.account}/>\n{/*   \n        <button className=\"container-fluid mt-5\"onClick={this.RegisterFarmerHandler} >Register has Farmer</button>\n        <button onClick={this.RegisterDistributorHandler} >Register has Distributor</button>\n        <button onClick={this.RegisterRetailerHandler} >Register has Retailer</button>\n        <button onClick={this.RegisterConsumerHandler} >Register has Consumer</button> */}\n\n       \n\n        <Crops\n          postCrop={this.onpostCrop}\n        />\n\n        <Union postUnion={this.onpostUnion} \n        />\n\n\n        <UnionClose\n          Unionclose={this.onUnionClose}\n        \n        />\n\n        <Product \n        products={this.state.products}\n        postProduct={this.onpostProduct}\n        />\n\n\n        \n        <DisplayCropOverview\n         crops={this.state.crops}\n         cropPurchase={this.oncropPurchase} \n         />\n\n        <DisplayUnionOverview \n          unions={this.state.unions}\n          joinunion={this.onjoinunion}\n          unionCroppurchase={this.onunionCroppurchase}\n          sendunionmoney={this.onsendunionmoney}\n          calculatepayment={this.oncalculatepayment}\n        />\n        <DisplayProductOverview \n          products={this.state.products}\n          productPurchase={this.onproductPurchase} \n          productprevious={this.onproductprevious}\n          crops={this.state.crops}\n          unions={this.state.unions}\n          \n        />\n\n\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}